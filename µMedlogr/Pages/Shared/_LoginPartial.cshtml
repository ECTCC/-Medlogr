@using Microsoft.AspNetCore.Identity
@using µMedlogr.core
@using µMedlogr.core.Models
@using Microsoft.EntityFrameworkCore
@using µMedlogr.core.Services
@using Microsoft.Extensions.DependencyInjection
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@inject µMedlogrContext context;
@inject EntityManager EntityManager;
@inject DrugService DrugService;
@{
    List<Person> inCareOf = [];
    AppUser user = null!;
    Person myPerson = null!;
    if (User is not null) {
        user = await UserManager.GetUserAsync(User);
        if(user != null){
        myPerson = user != null ? EntityManager.GetUserPerson(user?.Id) : null;
        inCareOf = await context.AppUsers
                      .Where(x => x.Id == user.Id)
                      .SelectMany(x => x.PeopleInCareOf)
                      .Include(x => x.HealthRecord)
                      .ToListAsync();
        }
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User)) {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Feber Loggar
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                @foreach (var person in inCareOf) {
                    <li>
                        <a class="nav-link text-dark" asp-area="" asp-page="/Feverlog" asp-route-healthrecordId="@person?.HealthRecord?.Id">@person.NickName</a>
                    </li>
                }
                <li><hr class="dropdown-divider"></li>
                @if (user?.Me != null) {
                    <li><a class="nav-link text-dark" asp-area="" asp-page="/Feverlog" asp-route-healthrecordId="@user.Me.HealthRecord?.Id">@user.Me.NickName</a></li>
                }
            </ul>
        </li>

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    } else {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

@* @if (myPerson is not null) {
    <div id="AddEventModal" class="modal fade">
        <partial name="Shared/AddEventModal" model="new Shared.AddEventModalModel(DrugService)"></partial>
        @* @Html.Partial("AddEventModal", new AddEventModalModel(Context.RequestServices.GetService<DrugService>())) { HealthRecordId = myPerson.HealthRecord.Id })
    </div>} *@

@* Will not run in partials, left as example *@
@* @section Scripts {
    <script type="text/javascript">
        $('#button1').click((event) => {
            $('#AddEventModal').modal('show')
        });
    </script>
} *@